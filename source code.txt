#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <string.h>
int* getCharNum(char* filename, int* totalNum);
int main() {
    char filename[30];
    char style[10];
    // totalNum[0]: 总行数  totalNum[1]: 总字符数  totalNum[2]: 总单词数
    int totalNum[3] = { 0, 0, 0 };
    printf("请输入检测'-c\-w' 和相应的文本文件");
    scanf("%s", style);
    scanf("%s", filename);

    if (getCharNum(filename, totalNum)) {
        if (strcmp("-w", style)==0) {
            printf("单词数: %d words", totalNum[2]);
        }
        else {
            printf("字符数: %d chars", totalNum[1]+1);
        }
    }
    else {
        printf("Error!\n");
    }
    return 0;
}
/**
 * 用来统计文件的字符数（totalNum[1]）、单词数(totalNum[2])
 * @param  filename  文件名
 * @param  totalNum  文件统计数据
 * @return  成功返回统计数据，否则返回NULL
**/
int* getCharNum(char* filename, int* totalNum) {
    FILE* fp;  // 指向文件的指针
    char buffer[1003];  //缓冲区，存储读取到的每行的内容
    int bufferLen;  // 缓冲区中实际存储的内容的长度
    int i;  // 当前读到缓冲区的第i个字符
    char c;  // 读取到的字符
    int isLastBlank = 0;  // 上个字符是否是空格
    int charNum = 0;  // 当前行的字符数
    int wordNum = 0; // 当前行的单词数
    if ((fp = fopen(filename, "rb")) == NULL) {
        perror(filename);
        return NULL;
    }
    while (fgets(buffer, 1003, fp) != NULL) {
        bufferLen = strlen(buffer);
        charNum = bufferLen - 1;//减去换行符和\0
        // 遍历缓冲区的内容
        for (i = 0; i < bufferLen; i++) {
            c = buffer[i];
            if (c == ' ' || c == ',') {  // 遇到空格
                !isLastBlank && wordNum++;  // 如果上个字符不是空格，那么单词数加1
                isLastBlank = 1;
            }
            else if (c != '\n' && c != '\r') {  // 忽略换行符
                isLastBlank = 0;
            }
        }
        !isLastBlank && wordNum++;  // 如果最后一个字符不是空格，那么单词数加1
        isLastBlank = 1;  // 每次换行重置为1
        // 一行结束，计算总字符数、总单词数、总行数
        totalNum[0]++;  // 总行数
        totalNum[1]+= charNum;//总字符数
        totalNum[2] += wordNum;  // 总单词数
        charNum = 0;
        wordNum = 0;
    }
    return totalNum;
}